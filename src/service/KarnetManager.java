package service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import main.Karnet;

public class KarnetManager {
	private Connection connection;
	private String url =  "jdbc:hsqldb:hsql://localhost/";
	private String createTableKarnet = "CREATE TABLE Karnet(id_karnet int GENERATED BY DEFAULT AS IDENTITY, rodzaj varchar(100), opis varchar(500),cena double)"; 
	
	
	private PreparedStatement DodajKarnet;
	private PreparedStatement UsunKarnet;
	private PreparedStatement UsunKarnety;
	private PreparedStatement PobierzKarnety;
	private PreparedStatement EdytujKarnet;
	
	private Statement statement;
	
	public KarnetManager(){
		try{
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();
			
			ResultSet rs =	connection.getMetaData().getTables(null, null, null, null);
			boolean tableExists = false;
			while(rs.next()){
				if("Karnet".equalsIgnoreCase(rs.getString("TABLE_NAME"))){
					tableExists = true;
					break;
				}
			}
			
			if(!tableExists)
				statement.executeUpdate(createTableKarnet);
			
			DodajKarnet = connection.prepareStatement("INSERT INTO Karnet(rodzaj, opis, cena) VALUES (?, ?, ?)");
			UsunKarnet = connection.prepareStatement("DELETE FROM Karnet WHERE id_karnet = ?");
			UsunKarnety = connection.prepareStatement("DELETE FROM Karnet");
			PobierzKarnety = connection.prepareStatement("SELECT id_karnet, rodzaj, opis, cena FROM Karnet");
			EdytujKarnet = connection.prepareStatement("UPDATE Karnet SET rodzaj = ?, opis = ?, cena = ? WHERE id_karnet = ?");
			
				
			
	}catch(SQLException e){
		e.printStackTrace();
	}
}

public Connection getConnection(){
	return connection;
}
	public void wyczyscKarnety(){
	try{
		UsunKarnety.executeUpdate();
		}catch (SQLException e){ 
			e.printStackTrace();
		}
}

	public int dodajKarnet(Karnet karnet){
		int count = 0;
		try{
			DodajKarnet.setString(1, karnet.getRodzaj());
			DodajKarnet.setString(2, karnet.getOpis());
			DodajKarnet.setDouble(3, karnet.getCena());
			
			
			
			count = DodajKarnet.executeUpdate();
			
			
		}catch (SQLException e){
			e.printStackTrace();
		}
		return count;
	}
	
	public int edytujKarnet(Karnet karnet){
		int count = 0;
		try{
		
			EdytujKarnet.setString(1, karnet.getRodzaj());
			EdytujKarnet.setString(2, karnet.getOpis());
			EdytujKarnet.setDouble(3, karnet.getCena());
			EdytujKarnet.setInt(4, karnet.getId_karnet());
			
			
			count = EdytujKarnet.executeUpdate();
			
			
		}catch (SQLException e){
			e.printStackTrace();
		}
		return count;
	}
	public int usunKarnet(Karnet karnet){
		int count = 0;
		try{
			UsunKarnet.setInt(1, karnet.getId_karnet());

			
			
			
			count = UsunKarnet.executeUpdate();
			
			
		}catch (SQLException e){
			e.printStackTrace();
		}
		return count;
	}
	
	
	public List<Karnet> PobierzKarnety(){
		List<Karnet> karnety = new ArrayList<Karnet>();
		
		try{
			ResultSet rs = PobierzKarnety.executeQuery();
			
			while (rs.next()){
				Karnet k = new Karnet();
				k.setId_karnet(rs.getInt("id_karnet"));
				k.setRodzaj(rs.getString("rodzaj"));
				k.setOpis(rs.getString("opis"));
				k.setCena(rs.getDouble("cena"));
				karnety.add(k);
			}}catch(SQLException e) {
				e.printStackTrace();
			}
			return karnety;
		}
	}